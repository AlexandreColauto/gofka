// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: broker/broker.proto

package broker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FetchRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrokerId      string                 `protobuf:"bytes,1,opt,name=brokerId,proto3" json:"brokerId,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	MaxBytes      int32                  `protobuf:"varint,5,opt,name=maxBytes,proto3" json:"maxBytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRecordsRequest) Reset() {
	*x = FetchRecordsRequest{}
	mi := &file_broker_broker_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRecordsRequest) ProtoMessage() {}

func (x *FetchRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRecordsRequest.ProtoReflect.Descriptor instead.
func (*FetchRecordsRequest) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{0}
}

func (x *FetchRecordsRequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *FetchRecordsRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *FetchRecordsRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *FetchRecordsRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FetchRecordsRequest) GetMaxBytes() int32 {
	if x != nil {
		return x.MaxBytes
	}
	return 0
}

type FetchRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       []*Message             `protobuf:"bytes,1,rep,name=message,proto3" json:"message,omitempty"`
	Highwatermark int64                  `protobuf:"varint,2,opt,name=highwatermark,proto3" json:"highwatermark,omitempty"`
	Longendoffset int64                  `protobuf:"varint,3,opt,name=longendoffset,proto3" json:"longendoffset,omitempty"`
	Success       bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRecordsResponse) Reset() {
	*x = FetchRecordsResponse{}
	mi := &file_broker_broker_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRecordsResponse) ProtoMessage() {}

func (x *FetchRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRecordsResponse.ProtoReflect.Descriptor instead.
func (*FetchRecordsResponse) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{1}
}

func (x *FetchRecordsResponse) GetMessage() []*Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *FetchRecordsResponse) GetHighwatermark() int64 {
	if x != nil {
		return x.Highwatermark
	}
	return 0
}

func (x *FetchRecordsResponse) GetLongendoffset() int64 {
	if x != nil {
		return x.Longendoffset
	}
	return 0
}

func (x *FetchRecordsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FetchRecordsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Topic         string                 `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,5,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset        int64                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Headers       map[string][]byte      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_broker_broker_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{2}
}

func (x *Message) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Message) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Message) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Message) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Message) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *Message) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Message) GetHeaders() map[string][]byte {
	if x != nil {
		return x.Headers
	}
	return nil
}

type UpdateFollowerStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BrokerId      string                 `protobuf:"bytes,1,opt,name=brokerId,proto3" json:"brokerId,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition     int32                  `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	FollowerId    string                 `protobuf:"bytes,4,opt,name=followerId,proto3" json:"followerId,omitempty"`
	FetchOffset   int64                  `protobuf:"varint,5,opt,name=fetchOffset,proto3" json:"fetchOffset,omitempty"`
	LongEndOffset int64                  `protobuf:"varint,6,opt,name=longEndOffset,proto3" json:"longEndOffset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFollowerStateRequest) Reset() {
	*x = UpdateFollowerStateRequest{}
	mi := &file_broker_broker_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFollowerStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowerStateRequest) ProtoMessage() {}

func (x *UpdateFollowerStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowerStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateFollowerStateRequest) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateFollowerStateRequest) GetBrokerId() string {
	if x != nil {
		return x.BrokerId
	}
	return ""
}

func (x *UpdateFollowerStateRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *UpdateFollowerStateRequest) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *UpdateFollowerStateRequest) GetFollowerId() string {
	if x != nil {
		return x.FollowerId
	}
	return ""
}

func (x *UpdateFollowerStateRequest) GetFetchOffset() int64 {
	if x != nil {
		return x.FetchOffset
	}
	return 0
}

func (x *UpdateFollowerStateRequest) GetLongEndOffset() int64 {
	if x != nil {
		return x.LongEndOffset
	}
	return 0
}

type UpdateFollowerStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFollowerStateResponse) Reset() {
	*x = UpdateFollowerStateResponse{}
	mi := &file_broker_broker_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFollowerStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFollowerStateResponse) ProtoMessage() {}

func (x *UpdateFollowerStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_broker_broker_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFollowerStateResponse.ProtoReflect.Descriptor instead.
func (*UpdateFollowerStateResponse) Descriptor() ([]byte, []int) {
	return file_broker_broker_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFollowerStateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateFollowerStateResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_broker_broker_proto protoreflect.FileDescriptor

const file_broker_broker_proto_rawDesc = "" +
	"\n" +
	"\x13broker/broker.proto\x12\x06broker\x1a\x1fgoogle/protobuf/timestamp.proto\"\x99\x01\n" +
	"\x13FetchRecordsRequest\x12\x1a\n" +
	"\bbrokerId\x18\x01 \x01(\tR\bbrokerId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\x12\x1a\n" +
	"\bmaxBytes\x18\x05 \x01(\x05R\bmaxBytes\"\xcc\x01\n" +
	"\x14FetchRecordsResponse\x12)\n" +
	"\amessage\x18\x01 \x03(\v2\x0f.broker.MessageR\amessage\x12$\n" +
	"\rhighwatermark\x18\x02 \x01(\x03R\rhighwatermark\x12$\n" +
	"\rlongendoffset\x18\x03 \x01(\x03R\rlongendoffset\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\"\xab\x02\n" +
	"\aMessage\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05topic\x18\x04 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x05 \x01(\x05R\tpartition\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x03R\x06offset\x126\n" +
	"\aheaders\x18\a \x03(\v2\x1c.broker.Message.HeadersEntryR\aheaders\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xd4\x01\n" +
	"\x1aUpdateFollowerStateRequest\x12\x1a\n" +
	"\bbrokerId\x18\x01 \x01(\tR\bbrokerId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x1c\n" +
	"\tpartition\x18\x03 \x01(\x05R\tpartition\x12\x1e\n" +
	"\n" +
	"followerId\x18\x04 \x01(\tR\n" +
	"followerId\x12 \n" +
	"\vfetchOffset\x18\x05 \x01(\x03R\vfetchOffset\x12$\n" +
	"\rlongEndOffset\x18\x06 \x01(\x03R\rlongEndOffset\"\\\n" +
	"\x1bUpdateFollowerStateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage2\xbf\x01\n" +
	"\x12IntraBrokerService\x12I\n" +
	"\fFetchRecords\x12\x1b.broker.FetchRecordsRequest\x1a\x1c.broker.FetchRecordsResponse\x12^\n" +
	"\x13UpdateFollowerState\x12\".broker.UpdateFollowerStateRequest\x1a#.broker.UpdateFollowerStateResponseB0Z.github.com/alexandrecolauto/gofka/proto/brokerb\x06proto3"

var (
	file_broker_broker_proto_rawDescOnce sync.Once
	file_broker_broker_proto_rawDescData []byte
)

func file_broker_broker_proto_rawDescGZIP() []byte {
	file_broker_broker_proto_rawDescOnce.Do(func() {
		file_broker_broker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_broker_broker_proto_rawDesc), len(file_broker_broker_proto_rawDesc)))
	})
	return file_broker_broker_proto_rawDescData
}

var file_broker_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_broker_broker_proto_goTypes = []any{
	(*FetchRecordsRequest)(nil),         // 0: broker.FetchRecordsRequest
	(*FetchRecordsResponse)(nil),        // 1: broker.FetchRecordsResponse
	(*Message)(nil),                     // 2: broker.Message
	(*UpdateFollowerStateRequest)(nil),  // 3: broker.UpdateFollowerStateRequest
	(*UpdateFollowerStateResponse)(nil), // 4: broker.UpdateFollowerStateResponse
	nil,                                 // 5: broker.Message.HeadersEntry
	(*timestamppb.Timestamp)(nil),       // 6: google.protobuf.Timestamp
}
var file_broker_broker_proto_depIdxs = []int32{
	2, // 0: broker.FetchRecordsResponse.message:type_name -> broker.Message
	6, // 1: broker.Message.timestamp:type_name -> google.protobuf.Timestamp
	5, // 2: broker.Message.headers:type_name -> broker.Message.HeadersEntry
	0, // 3: broker.IntraBrokerService.FetchRecords:input_type -> broker.FetchRecordsRequest
	3, // 4: broker.IntraBrokerService.UpdateFollowerState:input_type -> broker.UpdateFollowerStateRequest
	1, // 5: broker.IntraBrokerService.FetchRecords:output_type -> broker.FetchRecordsResponse
	4, // 6: broker.IntraBrokerService.UpdateFollowerState:output_type -> broker.UpdateFollowerStateResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_broker_broker_proto_init() }
func file_broker_broker_proto_init() {
	if File_broker_broker_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_broker_broker_proto_rawDesc), len(file_broker_broker_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_broker_broker_proto_goTypes,
		DependencyIndexes: file_broker_broker_proto_depIdxs,
		MessageInfos:      file_broker_broker_proto_msgTypes,
	}.Build()
	File_broker_broker_proto = out.File
	file_broker_broker_proto_goTypes = nil
	file_broker_broker_proto_depIdxs = nil
}
